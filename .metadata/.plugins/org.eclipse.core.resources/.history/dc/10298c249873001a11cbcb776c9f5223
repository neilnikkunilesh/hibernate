package com.aga;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;

public class StudentTestMto1 {

	public static void main(String[] args) {
		// Configure the db using xml file
		SessionFactory sf = null;
		Session session = null;
		Transaction tx = null;
		
		try {
			sf = new AnnotationConfiguration().configure("hibernate.cfg.xml").buildSessionFactory();
			session = sf.openSession();
			tx = session.beginTransaction();
			
			AddressMto1 add1 = new AddressMto1("23, Laxmi Nagar","Jaipur","Rajasthan", "302012");
			AddressMto1 add2 = new AddressMto1("202, Dadu Mandir","Hissar","Haryana", "590001");
			
			StudentMto1 s1 = new StudentMto1();
			s1.setStudentName("RAKESH KEDIA");
			
			s1.getAddress().add(add1);
			s1.getAddress().add(add2);
			
			add1.setStudent(s1);
			add2.setStudent(s1);
			
			session.save(s1);
			session.save(add1);
			session.save(add2);
			
			tx.commit();
			session.close();
			//session.save(s2);
			/* In Unidirectional approach obtaining AddressExplicit from StudentExplicit is possible
			 * but Obtaining StudentExplicit from AddressExplicit is not possible. This is possible
			 * only  in Bidirectional approach.Show below code:
			 * */
			
			  session = sf.openSession(); StudentMto1 studentExplicitObj =
			  (StudentMto1) session.get(StudentMto1.class, id1);
			  
			  System.out.println("Obtaining Student Information form Student object: \n");
			  System.out.println("Student Name: "+studentExplicitObj.getStudentName());
			  System.out.println();
			  
			  System.out.println("Obtaining Address Information from Student Object:  \n");
			  AddressMto1 addressExplicitObj = studentExplicitObj.getAddressExplicit();
			  //System.out.println(addressExplicitObj);
			  System.out.println(addressExplicitObj.getStreet()+" "+ addressExplicitObj.getCity()+" "
					 + addressExplicitObj.getState()+" "+addressExplicitObj.getZipcode());
			  
			  System.out.println("Obtaining Student Information from Address Object: \n");
			  StudentMto1 studentExplicitObj2 =
			  addressExplicitObj.getStudentExplicit();
			  System.out.println("Student Name: "+studentExplicitObj2.getStudentName());
			  
			  System.out.
			  println("\n The reference obtained from Address reference to its owning entity, to test this we can"
			  +
			  " equate the reference 'studentExplicitObj' and 'studentExplicitObj2' Resutl= "
			  +(studentExplicitObj==studentExplicitObj2));
			  
			 
			session.close();
			sf.close();
			
		} catch (HibernateException e) {
			//tx.rollback();
			e.printStackTrace();
		}
	}

}
