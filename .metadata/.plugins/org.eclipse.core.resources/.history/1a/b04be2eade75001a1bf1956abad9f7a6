package com.aga;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityResult;
import javax.persistence.FetchType;
import javax.persistence.FieldResult;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.SecondaryTable;
import javax.persistence.SecondaryTables;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

@Entity
@Table(name = "MessageHQL")
@NamedNativeQuery(
		name = "findMessageBySenderName",
		query = "select messageId, messageText, senderName, sendDate from messagehql where senderName = ?",
		resultSetMapping = "SqlMessageMapping"
		)
@SqlResultSetMapping(
		name = "SqlMessageMapping",
		entities = {
				@EntityResult(
						entityClass = MessageSQL.class,
						fields = {
								@FieldResult(name = "messageId", column = "messageId"),
								@FieldResult(name = "messageText", column = "messageText"),
								@FieldResult(name = "senderName", column = "senderName"),
								@FieldResult(name = "sendDate", column = "sendDate")
						}
				)
		}
)
public class MessageSQL {

	@Id
	@GeneratedValue
	private int messageId;
	
	@Column(name = "messageText", nullable = false, length = 200, unique = false)
	private String messageText;
	private String senderName;
	
	@Temporal(TemporalType.TIMESTAMP)//it is default
	private Date sendDate;

	public MessageSQL() {
		
	}
	public MessageSQL(String messageText, String senderName) {
		super();
		this.messageText = messageText;
		this.senderName = senderName;
	}

	// Create Constructor for the Select Constructor Expression
	public MessageSQL(int messageId, String senderName, Date sendDate) {
		super();
		this.messageId = messageId;
		this.senderName = senderName;
		this.sendDate = sendDate;
	}
	
	public int getMessageId() {
		return messageId;
	}

	public void setMessageId(int messageId) {
		this.messageId = messageId;
	}

	public String getMessageText() {
		return messageText;
	}

	public void setMessageText(String messageText) {
		this.messageText = messageText;
	}

	public String getSenderName() {
		return senderName;
	}

	public void setSenderName(String senderName) {
		this.senderName = senderName;
	}

	public Date getSendDate() {
		return sendDate;
	}

	public void setSendDate(Date sendDate) {
		this.sendDate = sendDate;
	}
	
	
	
}
